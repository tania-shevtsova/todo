{"version":3,"sources":["webpack:///./index.js"],"names":["todoIt","todos","items","addItems","text","id","todo","Date","now","this","push","removeItems","filter","el","refs","form","document","querySelector","list","tmp","localStorage","getItem","JSON","parse","startHtml","forEach","createItems","innerHTML","item","addEventListener","e","preventDefault","inpValue","currentTarget","elements","value","PNotify","error","removeAll","markupTodo","setItem","stringify","insertAdjacentHTML","reset","target","nodeName","li","closest","deleteById","Number","dataset","console","log","deleted","remove"],"mappings":"yLA0BMA,E,YAtBFC,G,UAAQ,CACRC,MAAO,GACPC,SAFQ,SAECC,EAAMC,GACb,IAAMC,EAAO,CACXD,GAAIA,GAAUE,KAAKC,MACnBJ,QAIF,OADAK,KAAKP,MAAMQ,KAAKJ,GACTA,GAETK,YAXQ,SAWIN,GACV,OAAQI,KAAKP,MAAQO,KAAKP,MAAMU,QAAO,SAAAC,GAAE,OAAIA,EAAGR,KAAOA,QAIrDS,EAAO,CACXC,KAAMC,SAASC,cAAc,cAC7BC,KAAMF,SAASC,cAAc,kBAGzBE,EAAMC,aAAaC,QAAQ,SAEjC,GAAIF,EACF,IACEnB,EAASsB,KAAKC,MAAMJ,GACpB,SACAnB,EAAS,GAIb,GAAIA,GAAUA,EAAOE,MAAO,CAC1B,IAAIsB,EAAY,GAChBxB,EAAOE,MAAMuB,SAAQ,SAAAZ,GACnBZ,EAAME,SAASU,EAAGT,KAAMS,EAAGR,IAC3BmB,GAAaE,EAAYb,MAE3BC,EAAKI,KAAKS,UAAYH,EA0BxB,SAASE,EAAYE,GACnB,8CAA+CA,EAAKvB,GAApD,2BAAiFuB,EAAKxB,KAAtF,uEAxBFU,EAAKC,KAAKc,iBAAiB,UAG3B,SAAoBC,GAClBA,EAAEC,iBACF,IAAIC,EAAWF,EAAEG,cAAcC,SAAS9B,KAAK+B,MAC7C,GAAe,KAAZH,EACDI,IAAQC,MAAM,6CAGV,CACJD,IAAQE,YACR,IAEIC,EAAab,EAFFzB,EAAME,SAAS6B,IAG9BZ,aAAaoB,QAAQ,QAASlB,KAAKmB,UAAUxC,IAY5BiB,EAXQJ,EAAKI,KAWPU,EAXaW,EAYtCrB,EAAKwB,mBAAmB,YAAad,GADvC,IAAqBV,EAAMU,EAPzBd,EAAKC,KAAK4B,WAnBZ7B,EAAKI,KAAKW,iBAAiB,SA8B3B,SAAqBC,GACnB,GAA0B,WAAtBA,EAAEc,OAAOC,UAA+C,SAAtBf,EAAEc,OAAOC,SAC7C,OAEF,IACMC,EADMhB,EAAEc,OACCG,QAAQ,oBAEjBC,EAAaC,OAAOH,EAAGI,QAAQ7C,IACrC8C,QAAQC,IAAIJ,GACZ,IAAIK,EAAUpD,EAAMU,YAAYqC,GAEhCF,EAAGQ,SACHtD,EAASqD,EACTjC,aAAaoB,QAAQ,QAASlB,KAAKmB,UAAU,CAAEvC,MAAOF,U","file":"main.130cb2507504c6d88f67.js","sourcesContent":["import './styles.css';\nimport PNotify from '../node_modules/pnotify/dist/es/PNotify.js';\nimport PNotifyBrightTheme from '../node_modules/pnotify/dist/PNotifyBrightTheme.css';\n\nlet todos = {\n    items: [],\n    addItems(text, id) {\n      const todo = {\n        id: id ? id : Date.now(),\n        text\n      };\n  \n      this.items.push(todo);\n      return todo;\n    },\n    removeItems(id) {\n      return (this.items = this.items.filter(el => el.id !== id));\n    }\n  };\n  \n  const refs = {\n    form: document.querySelector(\".js-editor\"),\n    list: document.querySelector(\".js-todo-list\")\n  };\n  \n  const tmp = localStorage.getItem(\"todos\");\n  let todoIt;\n  if (tmp) {\n    try {\n      todoIt = JSON.parse(tmp);\n    } catch {\n      todoIt = {};\n    }\n  }\n  \n  if (todoIt && todoIt.items) {\n    let startHtml = \"\";\n    todoIt.items.forEach(el => {\n      todos.addItems(el.text, el.id);\n      startHtml += createItems(el);\n    });\n    refs.list.innerHTML = startHtml;\n  }\n  \n  refs.form.addEventListener(\"submit\", handleForm);\n  refs.list.addEventListener(\"click\", deleteItems);\n\n  function handleForm(e) {\n    e.preventDefault();\n    let inpValue = e.currentTarget.elements.text.value;\n    if(inpValue=== \"\"){\n      PNotify.error('Todo list empty! Please, add an item!');\n    }\n\n    else  {\n      PNotify.removeAll();\n      let todoItem = todos.addItems(inpValue);\n  \n      let markupTodo = createItems(todoItem);\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n      let markup = buildMarkup(refs.list, markupTodo);\n    } \n   \n  \n    refs.form.reset();\n  }\n  \n  function createItems(item) {\n    return `<li class=\"todo-list__item\" data-id=\"${item.id}\"><p class=\"todo__text\">${item.text}</p><button class=\"todo__actions\"><span>Удалить</span></button></li>`;\n  }\n  \n  function buildMarkup(list, item) {\n    list.insertAdjacentHTML(\"beforeend\", item);\n  }\n  \n  function deleteItems(e) {\n    if (e.target.nodeName !== \"BUTTON\" && e.target.nodeName !== \"SPAN\") {\n      return;\n    }\n    const btn = e.target;\n    const li = btn.closest(\".todo-list__item\");\n  \n    const deleteById = Number(li.dataset.id);\n    console.log(deleteById);\n    let deleted = todos.removeItems(deleteById);\n  \n    li.remove();\n    todoIt = deleted;\n    localStorage.setItem(\"todos\", JSON.stringify({ items: todoIt }));\n  }"],"sourceRoot":""}